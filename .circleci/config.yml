version: 2.1
workflows:
  all:
    jobs:
      - lint
      - clippy
      - compile-r1cs-readme
      - compile-r1cs:
          matrix:
            parameters:
              field: ["oxfoi", "curve25519", "alt_bn128"]
              rust-version: ["stable", "beta", "nightly"]
      - compile-tasm:
          matrix:
            parameters:
              #field: ["foi"] # tasm only executes in oxfoi
              rust-version: ["stable", "beta", "nightly"]

step_defs:
  - run: &rust_version
      name: Set Rust version stable
      command: |
        curl -o rustup https://sh.rustup.rs
        bash rustup -y
        . "$HOME/.cargo/env"
        rustup update << parameters.rust-version >>
        rustup default << parameters.rust-version >>
        rustup component add clippy
  - run: &build_version_stable
      name: Set Rust version
      command: |
        curl -o rustup https://sh.rustup.rs
        bash rustup -y
        . "$HOME/.cargo/env"
        rustup update stable
        rustup default stable
        rustup component add clippy

environment: &rust_env
  PHANTOM: "hello"

jobs:
  clippy:
    machine:
      image: ubuntu-2204:current
    environment: *rust_env
    steps:
      - checkout
      - run: *build_version_stable
      - run:
          name: Clippy
          command: cargo clippy
  lint:
    machine:
      image: ubuntu-2204:current
    environment: *rust_env
    steps:
      - checkout
      - run: *build_version_stable
      - run:
          name: Lint
          command: cargo fmt --all -- --check
  compile-r1cs-readme:
    machine:
      image: ubuntu-2204:current
    environment: *rust_env
    steps:
      - checkout
      - run: *build_version_stable
      - run:
          name: Build
          command: cargo build
      - run:
          name: Run r1cs readme test
          command: cargo run --release -- r1cs_readme -t r1cs -i ./ashlang/test-vectors -i ./ashlang/stdlib -v -f oxfoi
  compile-r1cs:
    machine:
      image: ubuntu-2204:current
    environment: *rust_env
    parameters:
      field:
        type: string
      rust-version:
        type: string
    steps:
      - checkout
      - run: *rust_version
      - run:
          name: Build
          command: cargo build --release
      - run:
          name: Run r1cs test
          command: cargo run --release -- r1cs_test -t r1cs -i ./ashlang/test-vectors -i ./ashlang/stdlib -v -f << parameters.field >> -s 55
      - run:
          name: Run r1cs loop test
          command: cargo run --release -- loop_test -t r1cs -i ./ashlang/test-vectors -i ./ashlang/stdlib -v -f << parameters.field >>
      - run:
          name: Run r1cs matrix math test
          command: cargo run --release -- mat_math_test -t r1cs -i ./ashlang/test-vectors -i ./ashlang/stdlib -v -f << parameters.field >>
  compile-tasm:
    machine:
      image: ubuntu-2204:current
    environment: *rust_env
    parameters:
      rust-version:
        type: string
    steps:
      - checkout
      - run: *rust_version
      - run:
          name: Build
          command: cargo build --release
      - run:
          name: Run TritonVM tests
          command: sh ./test.sh
