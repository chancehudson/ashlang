WHITESPACE = _{ " " }
COMMENT = _{ "#" ~ (!"\n" ~ ANY)* }

program = _{ SOI ~ "\n"* ~ fn_header? ~ "\n"* ~ (stmt ~ "\n"+) * ~ (return_stmt ~ "\n"?)? ~ EOI }

stmt = { var_def | const_def | if_stmt }

fn_header = { "(" ~ ((varname ~ ("," | ")"))+ | ")") ~ "\n" }

char = _{ ASCII_ALPHANUMERIC | "_" }

varname = @{ char+ }
literal_dec = @{ ASCII_DIGIT+ }

atom = { literal_dec | varname }

// this let_r match is needed to
// determine if a variable is being
// declared for the first time
let_r = { "let " }
var = { let_r? ~ varname }
var_def = { var ~ "=" ~ (function_call | expr)}

return_stmt = { "return " ~ (function_call | expr) }

const_def = { "const " ~ varname ~ "=" ~ expr }

op = _{ add | sub | mul | inv }
    add = { "+" }
    sub = { "-" }
    mul = { "*" }
    inv = { "/" }

expr = { atom ~ (op ~ expr)* }

function_call = { varname ~ "()" }

bool_op = _{ equal | not_equal | gt | lt }
    equal = { "==" }
    not_equal = { "!=" }
    gt = { ">" }
    lt = { "<" }

bool_expr = { expr ~ bool_op ~ expr }

if_stmt = { "if " ~ bool_expr ~ block }

block = { "{" ~ "\n"* ~ (stmt ~ "\n")* ~ "\n"* ~ "}" ~ "\n" }